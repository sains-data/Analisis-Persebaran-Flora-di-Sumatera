# -*- coding: utf-8 -*-
"""Scrapping-Data-API.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13BLi7XsW1D-eneXkiDHwVz8Xw5uxlh0p

## Data Sampel 100 data
"""

import requests
import pandas as pd

# Contoh mengambil data occurrence (membutuhkan paging)
url = 'https://api.gbif.org/v1/occurrence/search?datasetKey=3e0987c4-375f-4d68-b2ac-5e4e3a6d3d6d&limit=100'
response = requests.get(url).json()

# Ambil data
records = response['results']
df = pd.DataFrame(records)

# Simpan ke CSV
df.to_csv('gbif_occurrence.csv', index=False)

"""## Mengambil semua data"""

import requests
import pandas as pd
import time

# Dataset key dari GBIF
dataset_key = '3e0987c4-375f-4d68-b2ac-5e4e3a6d3d6d'
base_url = 'https://api.gbif.org/v1/occurrence/search'

# Konfigurasi
limit = 300  # maksimum data per halaman
offset = 0
all_results = []

# Ambil total count
count_url = f'{base_url}?datasetKey={dataset_key}&limit=1'
total = requests.get(count_url).json().get('count', 0)
print(f"Total data yang tersedia: {total}")

# Loop untuk mengambil semua data
while offset < total:
    url = f"{base_url}?datasetKey={dataset_key}&limit={limit}&offset={offset}"
    print(f"Fetching offset {offset} ...")
    response = requests.get(url)

    if response.status_code != 200:
        print(f"Error saat mengambil data di offset {offset}")
        break

    data = response.json().get('results', [])
    all_results.extend(data)

    offset += limit
    time.sleep(1)  # Delay supaya tidak overload server

# Konversi ke DataFrame
df = pd.DataFrame(all_results)

# Pastikan kolom iucnRedListCategory ada
if 'iucnRedListCategory' in df.columns:
    # Filter berdasarkan kategori IUCN
    df_ne = df[df['iucnRedListCategory'] == 'NE']
    df_lc = df[df['iucnRedListCategory'] == 'LC']
    df_en = df[df['iucnRedListCategory'] == 'EN']

    # Simpan masing-masing ke CSV
    df_ne.to_csv('gbif_NE.csv', index=False)
    df_lc.to_csv('gbif_LC.csv', index=False)
    df_en.to_csv('gbif_EN.csv', index=False)

    print("Data berhasil disimpan berdasarkan kategori IUCN: NE, LC, EN")
else:
    print("Kolom 'iucnRedListCategory' tidak ditemukan dalam data.")